<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class PluginsfUploadedFile extends BasesfUploadedFile
{
  public function getValidatedFile($validatedFileClassName)
  {
    return new $validatedFileClassName($this->getOriginalName(), $this->getMimeType(), $this->getTempFile(), $this->getSize());
  }

  public function fromValidatedFile(sfValidatedFile $validatedFile, $savePath)
  {
    $this->setSize($validatedFile->getSize());
    $this->setMimeType($validatedFile->getType());
    $this->setOriginalName($validatedFile->getOriginalName());
    if (!$validatedFile->isSaved())
    {
      try
      {
        $validatedFile->save($savePath.'/'.$validatedFile->generateFilename());
      }
      catch (Exception $e)
      {
        throw $e;
      }
    }
    $this->setTempPath(dirname($validatedFile->getSavedName()));
    $this->setTempName(basename($validatedFile->getSavedName()));
  }
  
  public function getTempFile()
  {
    $path = $this->getTempPath();
    if (substr($path, strlen($path)-1) != DIRECTORY_SEPARATOR)
    {
      $path .= DIRECTORY_SEPARATOR;
    }

    return $path.$this->getTempName();
  }

  public function postDelete($event)
  {
    $tempFile = $this->getTempFile();
    if ($this->isFileExists())
    {
      if (!unlink($tempFile))
      {
        throw new Exception('Unable to remove file : "'.$tempFile.'"');
      }
    }
  }
  
  public function isFileExists()
  {
    $tempFile = $this->getTempFile();
    return (file_exists($tempFile) && is_file($tempFile));
  }
}